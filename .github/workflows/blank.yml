# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '56 5,12,18 * * *'  # Запуск 5:56, 12:56, 18:56 GMT

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Runs a set of commands using the runners shell
      - name: Run mkepg.sh
        run: |
           bash mkepg.sh > epg.xml

      - name: Archive epg.xml
        run: gzip -f epg.xml
        
      - name: Setup curl
        run: sudo apt-get install -y curl

      - name: Download File from Crazy
        env:
          FILE_URL: ${{ secrets.FILE_URL }} # The secret containing the HTTP link app/pdownload.php?file=
        run: curl -o crepg.xml.gz $FILE_URL

      - name: Upload to R2
        uses: ryand56/r2-upload-action@v1.4
        with:
          r2-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
          r2-bucket: epg
          source-dir: ./crepg.xml.gz
          destination-dir: ./

      - name: Update date and time
        run: |
           DATE=$(date -u +"%a, %d %b %Y %H:%M:%S GMT")
           sed -i "s/last-modified: .*/last-modified: ${DATE}/" _headers

      - name: Commit and push changes
        run: |
         git config user.name github-actions
         git config user.email github-actions 
         git add epg.xml.gz _headers
         git commit -m "Create epg archive and create headers last-modified"
         git push
